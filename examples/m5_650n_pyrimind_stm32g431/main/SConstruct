# project_root/src/SConscript
import os
import shutil
# Import the environment from the SConstruct file
Import("env")
with open(env["PROJECT_TOOL_S"]) as f:
    exec(f.read())


try:
    shutil.move('Src/stm32g4xx_it.c', 'itemized_src/stm32g4xx_it.c')
except:
    pass

SRCS = []
ITEMIZED_SRCS = Glob('itemized_src/*.c*')
INCLUDE = [ADir(".")]
PRIVATE_INCLUDE = []
REQUIREMENTS = ["stm32_bsp"]
STATIC_LIB = []
DYNAMIC_LIB = []
DEFINITIONS = []
DEFINITIONS_PRIVATE = []
LDFLAGS = []
LINK_SEARCH_PATH = []

ld_stript = env["stm32g431_ld_stript"]

LDFLAGS += [
    "-mcpu=cortex-m4",
    "--specs=nosys.specs",
    "-Wl,--gc-sections",
    "--specs=nano.specs",
    "-T",
    ld_stript,
    "-mfpu=fpv4-sp-d16",
    "-mfloat-abi=hard",
    "-mthumb",
    "-Wl,--start-group",
    "-lc",
    "-lm",
    "-Wl,--end-group",
]
# INCLUDE.append(ADir("Inc"))
INCLUDE.append(ADir("M5_Pyrmind_Drivers/Inc"))
SRCS += AGlob("Src/*.c*")
SRCS += AGlob("M5_Pyrmind_Drivers/Src/*.c*")


# arm-none-eabi-objcopy -O ihex at32f415_example  at32f415_example.hex
# arm-none-eabi-objcopy -O binary at32f415_example at32f415_example.bin
# arm-none-eabi-size --format=berkeley at32f415_example
# 烧录：pyocd flash --pack=./ArteryTek.AT32F415_DFP.2.1.6.pack  ./at32f415_example.hex --target _at32f415rct7
# 烧录：pyocd flash --pack=dist/ArteryTek.AT32F415_DFP.2.1.6.pack  dist/at32f415_example.hex --target _at32f415rct7


for com in env["COMPONENTS"]:
    if com["target"] == "stm32_bsp":
        com["INCLUDE"] += [ADir("Inc")]
        break

SRCS += append_srcs_dir(ADir("freemodbus"))
INCLUDE.append(ADir("freemodbus"))
INCLUDE.append(ADir("freemodbus/port"))
INCLUDE.append(ADir("freemodbus/modbus/include"))
INCLUDE.append(ADir("freemodbus/modbus/rtu"))
INCLUDE.append(ADir("freemodbus/modbus/ascii"))

STATIC_FILES = []
env["COMPONENTS"].append(
    {
        "target": env["PROJECT_NAME"],
        "SRCS": SRCS,
        'ITEMIZED_SRCS': ITEMIZED_SRCS,
        "INCLUDE": INCLUDE,
        "PRIVATE_INCLUDE": PRIVATE_INCLUDE,
        "REQUIREMENTS": REQUIREMENTS,
        "STATIC_LIB": STATIC_LIB,
        "DYNAMIC_LIB": DYNAMIC_LIB,
        "DEFINITIONS": DEFINITIONS,
        "DEFINITIONS_PRIVATE": DEFINITIONS_PRIVATE,
        "LDFLAGS": LDFLAGS,
        "LINK_SEARCH_PATH": LINK_SEARCH_PATH,
        "STATIC_FILES": STATIC_FILES,
        "REGISTER": "project",
    }
)
