import os
import sys



env = SConscript(
    os.path.join(os.getcwd(), "../../tools/scons/project.py"),
    variant_dir=os.getcwd(),
    duplicate=0,
)

if "flash" in sys.argv:
    os.system(
        f"pyocd flash -t STM32L011E4Yx dist/{env['PROJECT_NAME']}.hex"
    )
    exit()

# pyocd gdbserver -t STM32G431CBUX
# (gdb) target extended-remote :3333
# (gdb) monitor reset halt
# (gdb) load
# (gdb) b main
# (gdb) continue



main_project = env["task_list"][env['PROJECT_NAME']]
main_project["_target_build_env"].Command(
    target=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}.hex",  # 目标文件
    source=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}",  # 源文件
    action="${OBJCOPY} -O ihex $SOURCE $TARGET",  # 执行命令
)

main_project["_target_build_env"].Command(
    target=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}.bin",  # 目标文件
    source=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}",  # 源文件
    action="${OBJCOPY} -O binary $SOURCE $TARGET",  # 执行命令
)

main_project["_target_build_env"].Command(
    target=f"dist/{env['PROJECT_NAME']}.hex",  # 目标文件
    source=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}.hex",  # 源文件
    action="cp $SOURCE $TARGET",  # 执行命令
)

main_project["_target_build_env"].Command(
    target=f"dist/{env['PROJECT_NAME']}.bin",  # 目标文件
    source=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}.bin",  # 源文件
    action="cp $SOURCE $TARGET",  # 执行命令
)

main_project["_target_build_env"].Command(
    target="build/size.txt",  # 目标文件
    source=f"build/{env['PROJECT_NAME']}/{env['PROJECT_NAME']}",  # 源文件
    action="${SIZE} $SOURCE | tee $TARGET",  # 执行命令
)
